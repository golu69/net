A UDP Multicast Socket That Receives UDP Multicast Messages.
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
/* ww w .j av a 2 s .c o m*/
public class Main {
  public static void main(String[] args) throws Exception {
    int mcPort = 12345;
    String mcIPStr = "230.1.1.1";
    MulticastSocket mcSocket = null;
    InetAddress mcIPAddress = null;
    mcIPAddress = InetAddress.getByName(mcIPStr);
    mcSocket = new MulticastSocket(mcPort);
    System.out.println("Multicast Receiver running at:"
        + mcSocket.getLocalSocketAddress());
    mcSocket.joinGroup(mcIPAddress);
    DatagramPacket packet = new DatagramPacket(new byte[1024], 1024);
    System.out.println("Waiting for a  multicast message...");
    mcSocket.receive(packet);
    String msg = new String(packet.getData(), packet.getOffset(),
        packet.getLength());
    System.out.println("[Multicast  Receiver] Received:" + msg);
    mcSocket.leaveGroup(mcIPAddress);
    mcSocket.close();
  }
}




A UDP Datagram Socket, a Multicast Sender Application.
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
/*from www .j av a2 s. c o m*/
public class Main {
  public static void main(String[] args) throws Exception {
    int mcPort = 12345;
    String mcIPStr = "230.1.1.1";
    DatagramSocket udpSocket = new DatagramSocket();

    InetAddress mcIPAddress = InetAddress.getByName(mcIPStr);
    byte[] msg = "Hello".getBytes();
    DatagramPacket packet = new DatagramPacket(msg, msg.length);
    packet.setAddress(mcIPAddress);
    packet.setPort(mcPort);
    udpSocket.send(packet);

    System.out.println("Sent a  multicast message.");
    System.out.println("Exiting application");
    udpSocket.close();
  }
}
